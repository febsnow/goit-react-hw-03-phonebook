{"version":3,"sources":["сomponents/AddContactForm/AddContactForm.module.css","сomponents/Section/Section.jsx","сomponents/AddContactForm/AddContactForm.jsx","сomponents/ContactsList/ContactList.jsx","сomponents/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","сomponents/ContactsList/ContactList.module.css","сomponents/Filter/Filter.module.css"],"names":["module","exports","Section","props","title","children","defaultProps","AddContactForm","state","name","number","changeHandler","e","setState","target","value","submitHandler","evt","preventDefault","className","styles","contactsForm","onSubmit","this","htmlFor","label","formInput","type","id","placeholder","required","onChange","addButton","Component","ContactList","localStorage","removeItem","list","handleRemove","map","contact","uniqid","listItem","info","button","onClick","Filter","filter","App","contacts","addNewContact","newContact","find","alert","prevState","filterContacts","filtredContacts","toLowerCase","includes","removeContact","contactId","savedContacts","JSON","parse","getItem","length","setItem","stringify","contactsList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d6d66c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsForm\":\"AddContactForm_contactsForm__11A7j\",\"label\":\"AddContactForm_label__1FOgt\",\"formInput\":\"AddContactForm_formInput__1e6RF\",\"addButton\":\"AddContactForm_addButton__2UbAr\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = props => {\r\n  const { title, children } = props;\r\n  return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\nimport styles from './AddContactForm.module.css';\r\n\r\nclass AddContactForm extends Component {\r\n  static defaultProps = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  changeHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  submitHandler = evt => {\r\n    evt.preventDefault();\r\n\r\n    this.props.submitHandler(this.state.name, this.state.number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={styles.contactsForm} onSubmit={this.submitHandler}>\r\n          <label htmlFor=\"contactName\" className={styles.label}>\r\n            Name\r\n          </label>\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            name=\"name\"\r\n            id=\"contactName\"\r\n            placeholder=\"Enter name\"\r\n            required\r\n            onChange={this.changeHandler}\r\n          />\r\n          <label htmlFor=\"contactNumber\" className={styles.label}>\r\n            Number\r\n          </label>\r\n          <input\r\n            className={styles.formInput}\r\n            type=\"tel\"\r\n            value={this.state.number}\r\n            name=\"number\"\r\n            id=\"contactNumber\"\r\n            placeholder=\"Enter phone number\"\r\n            required\r\n            onChange={this.changeHandler}\r\n          />\r\n          <button className={styles.addButton} type=\"submit\">\r\n            Add contacts\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContactForm;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport uniqid from 'uniqid';\r\nimport styles from './ContactList.module.css';\r\n\r\nexport default class ContactList extends Component {\r\n  static propTypes = {\r\n   list: PropTypes.array.isRequired\r\n }\r\n  \r\n  componentWillUnmount() {\r\n    localStorage.removeItem('contacts');\r\n  }\r\n  \r\n  render() {\r\n    const { list, handleRemove } = this.props;\r\n    return (\r\n    <ul className={styles.list}>\r\n      {list.map(contact => {\r\n        const id = uniqid();\r\n        return (\r\n          <li key={id} className={styles.listItem}>\r\n            <span className={styles.info}>{contact.name}:</span>\r\n            <span className={styles.info}>{contact.number}</span>\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                handleRemove(contact.id);\r\n              }}>\r\n              Удалить\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );}\r\n}\r\n// const ContactList = ({ list, handleRemove }) => {\r\n//   componentWil\r\n//   return (\r\n//     <ul className={styles.list}>\r\n//       {list.map(contact => {\r\n//         const id = uniqid();\r\n//         return (\r\n//           <li key={id} className={styles.listItem}>\r\n//             <span className={styles.info}>{contact.name}:</span>\r\n//             <span className={styles.info}>{contact.number}</span>\r\n//             <button\r\n//               className={styles.button}\r\n//               type=\"button\"\r\n//               onClick={() => {\r\n//                 handleRemove(contact.id);\r\n//               }}>\r\n//               Удалить\r\n//             </button>\r\n//           </li>\r\n//         );\r\n//       })}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// ContactList.propTypes = {\r\n//   list: PropTypes.array.isRequired,\r\n// };\r\n\r\n// export default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nexport default function Filter({ value, changeHandler }) {\r\n  return (\r\n    <div className={styles.filter}>\r\n      <label htmlFor=\"filter\" className={styles.label}>\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={styles.formInput}\r\n        type=\"text\"\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={changeHandler}></input>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport uniqid from \"uniqid\";\r\nimport Section from \"./сomponents/Section/Section\";\r\nimport AddContactForm from \"./сomponents/AddContactForm/AddContactForm\";\r\nimport ContactList from \"./сomponents/ContactsList/ContactList\";\r\nimport Filter from \"./сomponents/Filter/Filter\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    filter: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    filter: \"\",\r\n    contacts: [],\r\n  };\r\n\r\n  state = {\r\n    contacts: [\r\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  addNewContact = (name, number) => {\r\n    const newContact = {\r\n      id: uniqid(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const existedContact = this.state.contacts.find(\r\n      (contact) => contact.name === newContact.name\r\n    );\r\n\r\n    if (existedContact) {\r\n      return alert(`${newContact.name} already exist`);\r\n    }\r\n\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: [...prevState.contacts, newContact],\r\n      };\r\n    });\r\n  };\r\n\r\n  filterContacts = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  filtredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  removeContact = (contactId) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter(\r\n          (contact) => contact.id !== contactId\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n\r\n    savedContacts && this.setState({ contacts: savedContacts });\r\n    // savedContacts\r\n    //   ? this.setState({ contacts: savedContacts })\r\n    //   : localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (\r\n      this.state.contacts !== prevState.contacts &&\r\n      this.state.contacts.length > 0\r\n    ) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const contactsList = this.filtredContacts();\r\n    const { contacts, filter } = this.state;\r\n\r\n    return (\r\n      <div className=\"phoneBook\">\r\n        <Section title=\"Phonebook\">\r\n          <AddContactForm submitHandler={this.addNewContact} />\r\n        </Section>\r\n        {contacts.length === 0 ? null : (\r\n          <Section title=\"Contacts\">\r\n            {contacts.length > 1 ? (\r\n              <Filter value={filter} changeHandler={this.filterContacts} />\r\n            ) : null}\r\n            <ContactList\r\n              list={contactsList}\r\n              handleRemove={this.removeContact}\r\n            />\r\n          </Section>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__1Jv54\",\"info\":\"ContactList_info__LhQWQ\",\"list\":\"ContactList_list__3_bsF\",\"listItem\":\"ContactList_listItem__EnvPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1jPaF\",\"label\":\"Filter_label__1E8yf\",\"formInput\":\"Filter_formInput__3rjkQ\"};"],"sourceRoot":""}